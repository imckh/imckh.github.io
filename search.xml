<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>SWT Layout 几种布局的例子</title>
      <link href="/2018/06/26/SWT-Layout-%E5%87%A0%E7%A7%8D%E5%B8%83%E5%B1%80%E7%9A%84%E4%BE%8B%E5%AD%90/"/>
      <url>/2018/06/26/SWT-Layout-%E5%87%A0%E7%A7%8D%E5%B8%83%E5%B1%80%E7%9A%84%E4%BE%8B%E5%AD%90/</url>
      <content type="html"><![CDATA[<h1 id="SWT中几种布局的例子"><a href="#SWT中几种布局的例子" class="headerlink" title="SWT中几种布局的例子"></a>SWT中几种布局的例子</h1><h2 id="SWT标准布局"><a href="#SWT标准布局" class="headerlink" title="SWT标准布局"></a>SWT标准布局</h2><table><thead><tr><th>布局</th><th>作用</th></tr></thead><tbody><tr><td>填充布局</td><td>将控件安排成一行或者一列， 并强制他们大小相同</td></tr><tr><td>表单布局</td><td>通过使用<code>FormAttachments</code>可选的配置每个子代的上下左右边来定位子代</td></tr><tr><td>网格布局</td><td>将子代放置成行和列</td></tr><tr><td>行布局</td><td>将子代放置成水平的行或垂直的列</td></tr></tbody></table><h2 id="FillLayout"><a href="#FillLayout" class="headerlink" title="FillLayout"></a>FillLayout</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>他把组件摆放在一行或者一列， 并强制组件大小一致。一般组件的高度与最高组件一致，宽度与最宽组件一致。FillLayout不折行，不能设置边界距离和间距。可以使用它布局任务栏或者工具栏，或者Group中的一组选择框。当容器只有一个子组件时也可以使用它，如果一个shell只有一个group子组件，FillLayout将使Group完全充满Shell.</p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><blockquote><p><img src="http://oytisdkic.bkt.clouddn.com/filllayouth1.png" alt="SWT.HORIZONTAL"> <br><br><code>SWT.HORIZONTAL</code>水平布局</p></blockquote><blockquote><p><img src="http://oytisdkic.bkt.clouddn.com/filllayouth2.png" alt="SWT.HORIZONTAL拉伸"><br><br><code>SWT.HORIZONTAL</code>水平布局拉伸状态</p></blockquote><blockquote><p><img src="http://oytisdkic.bkt.clouddn.com/filllayoutv1.png" alt="SWT.VERTICAL"><br><br><code>SWT.VERTICAL</code>垂直布局(<strong>default</strong>)</p></blockquote><blockquote><p><img src="http://oytisdkic.bkt.clouddn.com/filllayoutv2.png" alt="SWT.VERTICAL拉伸"><br><br><code>SWT.VERTICAL</code>垂直布局拉伸状态</p></blockquote><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><pre><code class="java">Display display = new Display();Shell shell = new Shell(display);FillLayout fillLayout = new FillLayout();fillLayout.type = SWT.VERTICAL;// fillLayout.type = SWT.HORIZONTAL;shell.setLayout(fillLayout);new Button(shell, SWT.PUSH).setText(&quot;B1&quot;);new Button(shell, SWT.PUSH).setText(&quot;Wide Button 2&quot;);new Button(shell, SWT.PUSH).setText(&quot;Button3&quot;);</code></pre><h2 id="RowLayout"><a href="#RowLayout" class="headerlink" title="RowLayout"></a>RowLayout</h2><h3 id="简介-1"><a href="#简介-1" class="headerlink" title="简介"></a>简介</h3><p>相比<code>FillLayout</code>,他可以提供折行显示, 以及可设置的边界距离和间距. 他有几个参数可以通过<code>setLayoutData</code>方法设置:</p><ul><li><code>type</code>: 控制水平还是垂直<strong>默认水平</strong></li><li><code>warp</code>: 控制RowLayout在当前行没有足够空间时是否折行显示组件. <strong>默认折行</strong></li><li><code>pack</code>:<ul><li>true: 组件使用他们的原始尺寸, 并排列时尽量远离左边. <strong>默认为true</strong></li><li>false: 组件将填充可用空间, 跟FillLayout类似</li></ul></li><li><code>justify</code>:<ul><li>true: 组件从左至右伸展. 如果容器变大了, 那么多余的空间被平均分配到组件上.</li><li>如果<code>pack</code>和<code>justify</code>同时为true, 组件将保持他们的原始大小, 多余的空间被平均分配到组件之间的空隙上. <strong>默认为false</strong></li></ul></li><li><code>MarginLeft</code>, <code>MarginTop</code>,<code>MarginRight</code>,<code>MarginBottom</code> 这些控制组件之间的距离(像素), 以及组件与容器之间的边距, <strong>默认RowLayout保留了3个像素的边距和间距</strong></li></ul><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><table><thead><tr><th>状态代码</th><th>初始状态</th><th>调整尺寸后</th></tr></thead><tbody><tr><td>wrap = true<br>pack = true<br>justify = false<br>type = SWT.VERTICAL<br></td><td><img src="http://oytisdkic.bkt.clouddn.com/wtptjfth1.png" alt="默认"></td><td><img src="http://oytisdkic.bkt.clouddn.com/wtptjfth2.png" alt="拉伸"></td></tr><tr><td>wrap = false<br>没有足够空间时裁边</td><td><img src="http://oytisdkic.bkt.clouddn.com/wtptjfth1.png" alt="默认"></td><td><img src="http://oytisdkic.bkt.clouddn.com/wfptjfth2.png" alt="伸展"></td></tr><tr><td>pack = false<br>所有组件尺寸一致</td><td><img src="http://oytisdkic.bkt.clouddn.com/wtpfjfth1.png" alt="pack = false"></td><td><img src="http://oytisdkic.bkt.clouddn.com/wtpfjfth2.png" alt="pack = false伸展"></td></tr><tr><td>justify = true<br>组件根据空间进行伸展</td><td><img src="http://oytisdkic.bkt.clouddn.com/wtptjtth1.png" alt="justify = true"></td><td><img src="http://oytisdkic.bkt.clouddn.com/wtptjtth2.png" alt="justify = true伸展"></td></tr><tr><td>type = SWT.VERTICAL<br>组件垂直摆放</td><td><img src="http://oytisdkic.bkt.clouddn.com/wtptjftv1.png" alt="type = SWT.VERTICAL"></td><td><img src="http://oytisdkic.bkt.clouddn.com/wtptjftv2.png" alt="type = SWT.VERTICAL调整"></td></tr></tbody></table><h3 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h3><p>共用部分代码</p><pre><code class="java">Display display = new Display();Shell shell = new Shell(display);// 在这里插入代码shell.pack();shell.open();while (!shell.isDisposed()) {    if (!display.readAndDispatch()) {        display.sleep();    }}display.dispose();</code></pre><p>由于除了layout的配置和按钮添加部分的代码不同外, 其他代码都一样, 所以这里只给出layout配置部分</p><pre><code class="java">RowLayout rowLayout = new RowLayout();rowLayout.wrap = true;rowLayout.pack = true;rowLayout.justify = false;rowLayout.type = SWT.VERTICAL;rowLayout.marginTop = 5;rowLayout.marginLeft = 5;rowLayout.marginRight = 5;rowLayout.marginBottom = 5;rowLayout.spacing = 0;shell.setLayout(rowLayout);new Button(shell, SWT.PUSH).setText(&quot;B1&quot;);new Button(shell, SWT.PUSH).setText(&quot;Wide Button 2&quot;);new Button(shell, SWT.PUSH).setText(&quot;Button3&quot;);</code></pre><h3 id="在RowLayout上配合使用RowData"><a href="#在RowLayout上配合使用RowData" class="headerlink" title="在RowLayout上配合使用RowData"></a>在RowLayout上配合使用RowData</h3><p>每个由RowLayout控制的组件可以通过RowData来设置其原始尺寸大小</p><pre><code class="java">shell.setLayout(new RowLayout());Button button1 = new Button(shell, SWT.PUSH);button1.setText(&quot;Button1&quot;);button1.setLayoutData(new RowData(50, 40));Button button2 = new Button(shell, SWT.PUSH);button2.setText(&quot;Button2&quot;);button2.setLayoutData(new RowData(50, 30));Button button3 = new Button(shell, SWT.PUSH);button3.setText(&quot;Button3&quot;);button3.setLayoutData(new RowData(50, 20));</code></pre><p>结果如下所示<br><img src="http://oytisdkic.bkt.clouddn.com/rowdataexample.png" alt="type = SWT.VERTICAL调整"></p><h2 id="TODO-2018-06-27-22-28-35-GridLayout"><a href="#TODO-2018-06-27-22-28-35-GridLayout" class="headerlink" title="TODO 2018-06-27 22:28:35 GridLayout"></a>TODO 2018-06-27 22:28:35 GridLayout</h2><h3 id="简介-2"><a href="#简介-2" class="headerlink" title="简介"></a>简介</h3><h3 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h3><h3 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h3>]]></content>
      
      <categories>
          
          <category> SWT/Jface </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SWT </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2018/06/25/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2018/06/25/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      <content type="html"><![CDATA[<h1 id="第一篇文章"><a href="#第一篇文章" class="headerlink" title="第一篇文章"></a>第一篇文章</h1><p>用来测试。</p>]]></content>
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>gallery</title>
      <link href="/gallery/index.html"/>
      <url>/gallery/index.html</url>
      <content type="html"><![CDATA[]]></content>
    </entry>
    
  
</search>
